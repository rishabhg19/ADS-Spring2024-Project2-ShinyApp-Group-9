corpus_moments <- tm_map(corpus_moments, removeWords, stopwords("english"))
corpus_moments <- tm_map(corpus_moments, removeWords, "happy")
corpus_moments <- tm_map(corpus_moments, removeWords, "went")
corpus_moments <- tm_map(corpus_moments, removeWords, "good")
corpus_moments <- tm_map(corpus_moments, removeWords, "perfect")
corpus_moments <- tm_map(corpus_moments, removeWords, "taking")
corpus_moments <- tm_map(corpus_moments, removeWords, "didnt")
corpus_moments <- tm_map(corpus_moments, removeWords, "day")
corpus_moments <- tm_map(corpus_moments, removeWords, "nice")
corpus_moments <- tm_map(corpus_moments, removeWords, "pleasant")
corpus_moments <- tm_map(corpus_moments, removeWords, "beautiful")
doctermatrix <- DocumentTermMatrix(corpus_moments)
str(doctermatrix)
matr <- as.matrix(doctermatrix)
str(matr)
wordfreqs <- sort(colSums(matr), decreasing = TRUE)
top_freqs <- head(num(wordfreqs), 250)
top_words <- head(names(wordfreqs), 250)
#worddata <- data.frame(word=top_words,freq=top_words)
worddata <- data.frame(word = top_words, freq = top_freqs)
wordcloud(words = worddata$word, freq = worddata$freq, scale = c(3, 0.5), colors = brewer.pal(8, "Dark2"))
top_5_words <- head(top_words, 5)
top_5_freqs <- head(top_freqs, 5)
top_5_words <- factor(top_5_words, levels = top_5_words[order(top_5_freqs, decreasing = TRUE)])
top5data <- data.frame(word = top_5_words, freq = top_5_freqs)
ggplot(top5data, aes(x = word, y = freq)) +
geom_bar(stat = "identity", fill = "blue") +
labs(title = "Top Words", x = "Words", y = "Frequency") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
top_50_words = head(top_words, 50)
scatterframe <- data.frame(
x = rnorm(50),
y = rnorm(50),
label = c(top_50_words)
)
textscatter(data$x, data$y, labels = data$label, cex = 0.7, main = "Word Scatter Plot")
library(textTinyR)
library(tm)
library(ggplot2)
library(wordcloud)
library(conflicted)
library(dplyr)
library(tidyverse)
library(tidytext)
maindf <- read_csv("/Users/rishabhganesh/Downloads/Happy Moments/data/cleaned_hm.csv")
exercisedf <- read_csv("/Users/rishabhganesh/Downloads/Happy Moments/data/exercise-dict.csv")
result <- maindf %>%
dplyr::filter(predicted_category %in% c("exercise", "nature"))
corpus_moments <- Corpus(VectorSource(result$cleaned_hm))
corpus_moments <- tm_map(corpus_moments, content_transformer(tolower))
corpus_moments <- tm_map(corpus_moments, removePunctuation)
corpus_moments <- tm_map(corpus_moments, removeNumbers)
corpus_moments <- tm_map(corpus_moments, removeWords, stopwords("english"))
corpus_moments <- tm_map(corpus_moments, removeWords, "happy")
corpus_moments <- tm_map(corpus_moments, removeWords, "went")
corpus_moments <- tm_map(corpus_moments, removeWords, "good")
corpus_moments <- tm_map(corpus_moments, removeWords, "perfect")
corpus_moments <- tm_map(corpus_moments, removeWords, "taking")
corpus_moments <- tm_map(corpus_moments, removeWords, "didnt")
corpus_moments <- tm_map(corpus_moments, removeWords, "day")
corpus_moments <- tm_map(corpus_moments, removeWords, "nice")
corpus_moments <- tm_map(corpus_moments, removeWords, "pleasant")
corpus_moments <- tm_map(corpus_moments, removeWords, "beautiful")
doctermatrix <- DocumentTermMatrix(corpus_moments)
str(doctermatrix)
matr <- as.matrix(doctermatrix)
str(matr)
wordfreqs <- sort(colSums(matr), decreasing = TRUE)
top_freqs <- head(num(wordfreqs), 250)
top_words <- head(names(wordfreqs), 250)
#worddata <- data.frame(word=top_words,freq=top_words)
worddata <- data.frame(word = top_words, freq = top_freqs)
wordcloud(words = worddata$word, freq = worddata$freq, scale = c(3, 0.5), colors = brewer.pal(8, "Dark2"))
top_5_words <- head(top_words, 5)
top_5_freqs <- head(top_freqs, 5)
top_5_words <- factor(top_5_words, levels = top_5_words[order(top_5_freqs, decreasing = TRUE)])
top5data <- data.frame(word = top_5_words, freq = top_5_freqs)
ggplot(top5data, aes(x = word, y = freq)) +
geom_bar(stat = "identity", fill = "blue") +
labs(title = "Top Words", x = "Words", y = "Frequency") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
top_50_words = head(top_words, 50)
scatterframe <- data.frame(
x = rnorm(50),
y = rnorm(50),
label = c(top_50_words)
)
textscatter(scatterframe$x, scatterframe$y, labels = scatterframe$label, cex = 0.7, main = "Word Scatter Plot")
library(textTinyR)
library(tm)
library(ggplot2)
library(wordcloud)
library(conflicted)
library(dplyr)
library(tidyverse)
library(tidytext)
maindf <- read_csv("/Users/rishabhganesh/Downloads/Happy Moments/data/cleaned_hm.csv")
exercisedf <- read_csv("/Users/rishabhganesh/Downloads/Happy Moments/data/exercise-dict.csv")
result <- maindf %>%
dplyr::filter(predicted_category %in% c("exercise", "nature"))
corpus_moments <- Corpus(VectorSource(result$cleaned_hm))
corpus_moments <- tm_map(corpus_moments, content_transformer(tolower))
corpus_moments <- tm_map(corpus_moments, removePunctuation)
corpus_moments <- tm_map(corpus_moments, removeNumbers)
corpus_moments <- tm_map(corpus_moments, removeWords, stopwords("english"))
corpus_moments <- tm_map(corpus_moments, removeWords, "happy")
corpus_moments <- tm_map(corpus_moments, removeWords, "went")
corpus_moments <- tm_map(corpus_moments, removeWords, "good")
corpus_moments <- tm_map(corpus_moments, removeWords, "perfect")
corpus_moments <- tm_map(corpus_moments, removeWords, "taking")
corpus_moments <- tm_map(corpus_moments, removeWords, "didnt")
corpus_moments <- tm_map(corpus_moments, removeWords, "day")
corpus_moments <- tm_map(corpus_moments, removeWords, "nice")
corpus_moments <- tm_map(corpus_moments, removeWords, "pleasant")
corpus_moments <- tm_map(corpus_moments, removeWords, "beautiful")
doctermatrix <- DocumentTermMatrix(corpus_moments)
str(doctermatrix)
matr <- as.matrix(doctermatrix)
str(matr)
wordfreqs <- sort(colSums(matr), decreasing = TRUE)
top_freqs <- head(num(wordfreqs), 250)
top_words <- head(names(wordfreqs), 250)
#worddata <- data.frame(word=top_words,freq=top_words)
worddata <- data.frame(word = top_words, freq = top_freqs)
wordcloud(words = worddata$word, freq = worddata$freq, scale = c(3, 0.5), colors = brewer.pal(8, "Dark2"))
top_5_words <- head(top_words, 5)
top_5_freqs <- head(top_freqs, 5)
top_5_words <- factor(top_5_words, levels = top_5_words[order(top_5_freqs, decreasing = TRUE)])
top5data <- data.frame(word = top_5_words, freq = top_5_freqs)
ggplot(top5data, aes(x = word, y = freq)) +
geom_bar(stat = "identity", fill = "blue") +
labs(title = "Top Words", x = "Words", y = "Frequency") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(textTinyR)
top_50_words = head(top_words, 50)
scatterframe <- data.frame(
x = rnorm(50),
y = rnorm(50),
label = c(top_50_words)
)
textscatter(scatterframe$x, scatterframe$y, labels = scatterframe$label, cex = 0.7, main = "Word Scatter Plot")
install.packages("textTinyR")
library(textTinyR)
top_50_words = head(top_words, 50)
scatterframe <- data.frame(
x = rnorm(50),
y = rnorm(50),
label = c(top_50_words)
)
textscatter(scatterframe$x, scatterframe$y, labels = scatterframe$label, cex = 0.7, main = "Word Scatter Plot")
install.packages("textTinyR")
install.packages("textTinyR")
library(textTinyR)
top_50_words = head(top_words, 50)
scatterframe <- data.frame(
x = rnorm(50),
y = rnorm(50),
label = c(top_50_words)
)
textscatter(scatterframe$x, scatterframe$y, labels = scatterframe$label, cex = 0.7, main = "Word Scatter Plot")
library(textTinyR)
top_50_words = head(top_words, 50)
scatterframe <- data.frame(
x = rnorm(50),
y = rnorm(50),
label = c(top_50_words)
)
textscatter(scatterframe$x, scatterframe$y, labels = scatterframe$label, cex = 0.7, main = "Word Scatter Plot")
library(textTinyR)
top_50_words = head(top_words, 50)
scatterframe <- data.frame(
x = rnorm(50),
y = rnorm(50),
label = c(top_50_words)
)
ggplot(scatterframe, aes(x = x, y = y, label = label)) +
geom_text(size = 3) +
ggtitle("Word Scatter Plot")
library(textTinyR)
library(ggplot2)
top_50_words = head(top_words, 50)
scatterframe <- data.frame(
x = rnorm(50),
y = rnorm(50),
label = c(top_50_words)
)
ggplot(scatterframe, aes(x = x, y = y, label = label)) +
geom_text(size = 3) +
ggtitle("Word Scatter Plot")
install.packages("ggrepel")
library(textTinyR)
library(ggplot2)
library(ggrepel)
top_50_words = head(top_words, 50)
scatterframe <- data.frame(
x = rnorm(50),
y = rnorm(50),
label = c(top_50_words)
)
ggplot(scatterframe, aes(x = x, y = y, label = label)) +
geom_point() +
geom_text_repel(size = 3) +
ggtitle("Word Scatter Plot")
library(textTinyR)
library(tm)
library(ggplot2)
library(wordcloud)
library(conflicted)
library(dplyr)
library(tidyverse)
library(tidytext)
maindf <- read_csv("/Users/rishabhganesh/Downloads/Happy Moments/data/cleaned_hm.csv")
exercisedf <- read_csv("/Users/rishabhganesh/Downloads/Happy Moments/data/exercise-dict.csv")
result <- maindf %>%
dplyr::filter(predicted_category %in% c("exercise", "nature"))
corpus_moments <- Corpus(VectorSource(result$cleaned_hm))
corpus_moments <- tm_map(corpus_moments, content_transformer(tolower))
corpus_moments <- tm_map(corpus_moments, removePunctuation)
corpus_moments <- tm_map(corpus_moments, removeNumbers)
corpus_moments <- tm_map(corpus_moments, removeWords, stopwords("english"))
corpus_moments <- tm_map(corpus_moments, removeWords, "happy")
corpus_moments <- tm_map(corpus_moments, removeWords, "went")
corpus_moments <- tm_map(corpus_moments, removeWords, "good")
corpus_moments <- tm_map(corpus_moments, removeWords, "great")
corpus_moments <- tm_map(corpus_moments, removeWords, "perfect")
corpus_moments <- tm_map(corpus_moments, removeWords, "taking")
corpus_moments <- tm_map(corpus_moments, removeWords, "didnt")
corpus_moments <- tm_map(corpus_moments, removeWords, "day")
corpus_moments <- tm_map(corpus_moments, removeWords, "nice")
corpus_moments <- tm_map(corpus_moments, removeWords, "pleasant")
corpus_moments <- tm_map(corpus_moments, removeWords, "beautiful")
corpus_moments <- tm_map(corpus_moments, removeWords, "really")
doctermatrix <- DocumentTermMatrix(corpus_moments)
str(doctermatrix)
matr <- as.matrix(doctermatrix)
str(matr)
wordfreqs <- sort(colSums(matr), decreasing = TRUE)
top_freqs <- head(num(wordfreqs), 250)
top_words <- head(names(wordfreqs), 250)
#worddata <- data.frame(word=top_words,freq=top_words)
worddata <- data.frame(word = top_words, freq = top_freqs)
wordcloud(words = worddata$word, freq = worddata$freq, scale = c(3, 0.5), colors = brewer.pal(8, "Dark2"))
library(textTinyR)
library(tm)
library(ggplot2)
library(wordcloud)
library(conflicted)
library(dplyr)
library(tidyverse)
library(tidytext)
maindf <- read_csv("/Users/rishabhganesh/Downloads/Happy Moments/data/cleaned_hm.csv")
exercisedf <- read_csv("/Users/rishabhganesh/Downloads/Happy Moments/data/exercise-dict.csv")
result <- maindf %>%
dplyr::filter(predicted_category %in% c("exercise", "nature"))
corpus_moments <- Corpus(VectorSource(result$cleaned_hm))
corpus_moments <- tm_map(corpus_moments, content_transformer(tolower))
corpus_moments <- tm_map(corpus_moments, removePunctuation)
corpus_moments <- tm_map(corpus_moments, removeNumbers)
corpus_moments <- tm_map(corpus_moments, removeWords, stopwords("english"))
corpus_moments <- tm_map(corpus_moments, removeWords, "happy")
corpus_moments <- tm_map(corpus_moments, removeWords, "went")
corpus_moments <- tm_map(corpus_moments, removeWords, "good")
corpus_moments <- tm_map(corpus_moments, removeWords, "great")
corpus_moments <- tm_map(corpus_moments, removeWords, "perfect")
corpus_moments <- tm_map(corpus_moments, removeWords, "taking")
corpus_moments <- tm_map(corpus_moments, removeWords, "didnt")
corpus_moments <- tm_map(corpus_moments, removeWords, "day")
corpus_moments <- tm_map(corpus_moments, removeWords, "nice")
corpus_moments <- tm_map(corpus_moments, removeWords, "pleasant")
corpus_moments <- tm_map(corpus_moments, removeWords, "beautiful")
corpus_moments <- tm_map(corpus_moments, removeWords, "really")
doctermatrix <- DocumentTermMatrix(corpus_moments)
str(doctermatrix)
matr <- as.matrix(doctermatrix)
str(matr)
wordfreqs <- sort(colSums(matr), decreasing = TRUE)
top_freqs <- head(num(wordfreqs), 250)
top_words <- head(names(wordfreqs), 250)
#worddata <- data.frame(word=top_words,freq=top_words)
worddata <- data.frame(word = top_words, freq = top_freqs)
wordcloud(words = worddata$word, freq = worddata$freq, scale = c(3, 0.5), colors = brewer.pal(8, "Dark2"))
top_5_words <- head(top_words, 5)
top_5_freqs <- head(top_freqs, 5)
top_5_words <- factor(top_5_words, levels = top_5_words[order(top_5_freqs, decreasing = TRUE)])
top5data <- data.frame(word = top_5_words, freq = top_5_freqs)
ggplot(top5data, aes(x = word, y = freq)) +
geom_bar(stat = "identity", fill = "blue") +
labs(title = "Top Words", x = "Words", y = "Frequency") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
install.packages("ggrepel")
library(textTinyR)
library(ggplot2)
library(ggrepel)
top_50_words = head(top_words, 50)
scatterframe <- data.frame(
x = rnorm(50),
y = rnorm(50),
label = c(top_50_words)
)
ggplot(scatterframe, aes(x = x, y = y, label = label)) +
geom_point() +
geom_text_repel(size = 3) +
ggtitle("Word Scatter Plot")
install.packages("ggrepel")
library(textTinyR)
library(tm)
library(ggplot2)
library(wordcloud)
library(conflicted)
library(dplyr)
library(tidyverse)
library(tidytext)
maindf <- read_csv("/Users/rishabhganesh/Downloads/Happy Moments/data/cleaned_hm.csv")
exercisedf <- read_csv("/Users/rishabhganesh/Downloads/Happy Moments/data/exercise-dict.csv")
result <- maindf %>%
dplyr::filter(predicted_category %in% c("exercise", "nature"))
corpus_moments <- Corpus(VectorSource(result$cleaned_hm))
corpus_moments <- tm_map(corpus_moments, content_transformer(tolower))
corpus_moments <- tm_map(corpus_moments, removePunctuation)
corpus_moments <- tm_map(corpus_moments, removeNumbers)
corpus_moments <- tm_map(corpus_moments, removeWords, stopwords("english"))
corpus_moments <- tm_map(corpus_moments, removeWords, "happy")
corpus_moments <- tm_map(corpus_moments, removeWords, "went")
corpus_moments <- tm_map(corpus_moments, removeWords, "good")
corpus_moments <- tm_map(corpus_moments, removeWords, "enjoyed")
corpus_moments <- tm_map(corpus_moments, removeWords, "great")
corpus_moments <- tm_map(corpus_moments, removeWords, "perfect")
corpus_moments <- tm_map(corpus_moments, removeWords, "taking")
corpus_moments <- tm_map(corpus_moments, removeWords, "didnt")
corpus_moments <- tm_map(corpus_moments, removeWords, "day")
corpus_moments <- tm_map(corpus_moments, removeWords, "nice")
corpus_moments <- tm_map(corpus_moments, removeWords, "pleasant")
corpus_moments <- tm_map(corpus_moments, removeWords, "beautiful")
corpus_moments <- tm_map(corpus_moments, removeWords, "really")
doctermatrix <- DocumentTermMatrix(corpus_moments)
str(doctermatrix)
matr <- as.matrix(doctermatrix)
str(matr)
wordfreqs <- sort(colSums(matr), decreasing = TRUE)
top_freqs <- head(num(wordfreqs), 250)
top_words <- head(names(wordfreqs), 250)
#worddata <- data.frame(word=top_words,freq=top_words)
worddata <- data.frame(word = top_words, freq = top_freqs)
wordcloud(words = worddata$word, freq = worddata$freq, scale = c(3, 0.5), colors = brewer.pal(8, "Dark2"))
top_5_words <- head(top_words, 5)
top_5_freqs <- head(top_freqs, 5)
top_5_words <- factor(top_5_words, levels = top_5_words[order(top_5_freqs, decreasing = TRUE)])
top5data <- data.frame(word = top_5_words, freq = top_5_freqs)
ggplot(top5data, aes(x = word, y = freq)) +
geom_bar(stat = "identity", fill = "blue") +
labs(title = "Top Words", x = "Words", y = "Frequency") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
install.packages("ggrepel")
library(textTinyR)
library(ggplot2)
library(ggrepel)
top_50_words = head(top_words, 50)
scatterframe <- data.frame(
x = rnorm(50),
y = rnorm(50),
label = c(top_50_words)
)
ggplot(scatterframe, aes(x = x, y = y, label = label)) +
geom_point() +
geom_text_repel(size = 3) +
ggtitle("Word Scatter Plot")
install.packages("tidytext")
library(tidytext)
all_moments <- read_csv("/Users/rishabhganesh/Downloads/Happy Moments/data/cleaned_hm.csv")
print(head(all_moments))
young_adult_hm_df <- read_csv("/Users/rishabhganesh/Downloads/Happy Moments/data/exercise-dict.csv")
result <- maindf %>%
dplyr::filter(predicted_category %in% c("exercise", "nature"))
install.packages("tidytext")
library(tidytext)
all_moments <- read_csv("/Users/rishabhganesh/Downloads/Happy Moments/data/cleaned_hm.csv")
demographic_df <- read_csv("/Users/rishabhganesh/Downloads/Happy Moments/data/demographic.csv")
print(head(demographic_df))
result <- maindf %>%
dplyr::filter(predicted_category %in% c("exercise", "nature"))
library(tidytext)
all_moments <- read_csv("/Users/rishabhganesh/Downloads/Happy Moments/data/cleaned_hm.csv")
demographic_df <- read_csv("/Users/rishabhganesh/Downloads/Happy Moments/data/demographic.csv")
print(all_moments$wid)
print(head(demographic_df))
result <- maindf %>%
dplyr::filter(predicted_category %in% c("exercise", "nature"))
library(tidytext)
all_moments <- read_csv("/Users/rishabhganesh/Downloads/Happy Moments/data/cleaned_hm.csv")
demographic_df <- read_csv("/Users/rishabhganesh/Downloads/Happy Moments/data/demographic.csv")
print(head(all_moments$wid))
print(head(demographic_df))
result <- maindf %>%
dplyr::filter(predicted_category %in% c("exercise", "nature"))
library(tidytext)
all_moments <- read_csv("/Users/rishabhganesh/Downloads/Happy Moments/data/cleaned_hm.csv")
demographic_df <- read_csv("/Users/rishabhganesh/Downloads/Happy Moments/data/demographic.csv")
joined_df <- inner_join(all_moments, demographic_df, by = "wid")
print(head(joined_df))
result <- maindf %>%
dplyr::filter(predicted_category %in% c("exercise", "nature"))
library(tidytext)
all_moments <- read_csv("/Users/rishabhganesh/Downloads/Happy Moments/data/cleaned_hm.csv")
demographic_df <- read_csv("/Users/rishabhganesh/Downloads/Happy Moments/data/demographic.csv")
joined_df <- inner_join(all_moments, demographic_df, by = "wid")
young_adult_hm_df <- joined_df %>%
dplyr::filter(age < 18)
print(head(young_adult_hm_df))
library(tidytext)
all_moments <- read_csv("/Users/rishabhganesh/Downloads/Happy Moments/data/cleaned_hm.csv")
demographic_df <- read_csv("/Users/rishabhganesh/Downloads/Happy Moments/data/demographic.csv")
joined_df <- inner_join(all_moments, demographic_df, by = "wid")
young_adult_hm_df <- joined_df %>%
dplyr::filter(age < 18)
print(head(young_adult_hm_df),100)
library(tidytext)
all_moments <- read_csv("/Users/rishabhganesh/Downloads/Happy Moments/data/cleaned_hm.csv")
demographic_df <- read_csv("/Users/rishabhganesh/Downloads/Happy Moments/data/demographic.csv")
joined_df <- inner_join(all_moments, demographic_df, by = "wid")
young_adult_hm_df <- joined_df %>%
dplyr::filter(age < 18)
print((head(young_adult_hm_df),100))
library(tidytext)
all_moments <- read_csv("/Users/rishabhganesh/Downloads/Happy Moments/data/cleaned_hm.csv")
demographic_df <- read_csv("/Users/rishabhganesh/Downloads/Happy Moments/data/demographic.csv")
joined_df <- inner_join(all_moments, demographic_df, by = "wid")
young_adult_hm_df <- joined_df %>%
dplyr::filter(age < 18)
print((head(young_adult_hm_df,100))
install.packages("ngrams")
library(ngrams)
install.packages("ngram")
library(ngram)
library(textTinyR)
library(tm)
library(ggplot2)
library(wordcloud)
library(conflicted)
library(dplyr)
library(tidyverse)
library(tidytext)
maindf <- read_csv("/Users/rishabhganesh/Downloads/Happy Moments/data/cleaned_hm.csv")
exercisedf <- read_csv("/Users/rishabhganesh/Downloads/Happy Moments/data/exercise-dict.csv")
result <- maindf %>%
dplyr::filter(predicted_category %in% c("exercise", "nature"))
corpus_moments <- Corpus(VectorSource(result$cleaned_hm))
corpus_moments <- tm_map(corpus_moments, content_transformer(tolower))
corpus_moments <- tm_map(corpus_moments, removePunctuation)
corpus_moments <- tm_map(corpus_moments, removeNumbers)
corpus_moments <- tm_map(corpus_moments, removeWords, stopwords("english"))
corpus_moments <- tm_map(corpus_moments, removeWords, "happy")
corpus_moments <- tm_map(corpus_moments, removeWords, "went")
corpus_moments <- tm_map(corpus_moments, removeWords, "good")
corpus_moments <- tm_map(corpus_moments, removeWords, "enjoyed")
corpus_moments <- tm_map(corpus_moments, removeWords, "great")
corpus_moments <- tm_map(corpus_moments, removeWords, "perfect")
corpus_moments <- tm_map(corpus_moments, removeWords, "taking")
corpus_moments <- tm_map(corpus_moments, removeWords, "didnt")
corpus_moments <- tm_map(corpus_moments, removeWords, "day")
corpus_moments <- tm_map(corpus_moments, removeWords, "nice")
corpus_moments <- tm_map(corpus_moments, removeWords, "pleasant")
corpus_moments <- tm_map(corpus_moments, removeWords, "beautiful")
corpus_moments <- tm_map(corpus_moments, removeWords, "really")
doctermatrix <- DocumentTermMatrix(corpus_moments)
str(doctermatrix)
matr <- as.matrix(doctermatrix)
str(matr)
wordfreqs <- sort(colSums(matr), decreasing = TRUE)
top_freqs <- head(num(wordfreqs), 250)
top_words <- head(names(wordfreqs), 250)
#worddata <- data.frame(word=top_words,freq=top_words)
worddata <- data.frame(word = top_words, freq = top_freqs)
wordcloud(words = worddata$word, freq = worddata$freq, scale = c(3, 0.5), colors = brewer.pal(8, "Dark2"))
install.packages("tidyr")
install.packages("get_sentiments")
library(shiny); runApp('Downloads/shiny/shiny.R')
runApp('Downloads/shiny/shiny.R')
runApp('Downloads/shiny/shiny.R')
install.packages("DT")
runApp('Downloads/shiny')
runApp('Downloads/shiny/shiny.R')
runApp('Downloads/shiny/shiny.R')
runApp('Downloads/shiny/shiny.R')
runApp('Downloads/shiny/shiny.R')
runApp('Downloads/shiny/shiny.R')
install.packages("plotly")
runApp('Downloads/shiny/shiny.R')
runApp('Downloads/shiny/shiny.R')
runApp('Downloads/shiny/shiny.R')
runApp('Downloads/shiny/shiny.R')
runApp('Downloads/shiny/shiny.R')
runApp('Downloads/shiny/shiny.R')
runApp('Downloads/shiny/shiny.R')
runApp('Downloads/shiny/shiny.R')
runApp('Downloads/shiny/shiny.R')
runApp('Downloads/shiny/shiny.R')
runApp('Downloads/shiny/shiny.R')
runApp('Downloads/shiny/shiny.R')
runApp('Downloads/shiny/shiny.R')
runApp('Downloads/shiny/shiny.R')
runApp('Downloads/shiny/shiny.R')
runApp('Downloads/shiny/shiny.R')
runApp('Downloads/shiny/shiny.R')
runApp('Downloads/shiny/shiny.R')
runApp('Downloads/shiny/shiny.R')
runApp('Downloads/shiny/shiny.R')
runApp('Downloads/shiny/shiny.R')
runApp('Downloads/shiny/shiny.R')
runApp('Downloads/shiny/shiny.R')
runApp('Downloads/ADS-Spring2024-Project2-ShinyApp-Group-9/app')
runApp('Downloads/ADS-Spring2024-Project2-ShinyApp-Group-9/app')
runApp('Downloads/ADS-Spring2024-Project2-ShinyApp-Group-9/app')
